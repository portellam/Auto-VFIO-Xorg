#!/usr/bin/env bash
#
# Original author(s):   [1] Sebastiaan Meijer (sebastiaan@passthroughpo.st)
#                       [2] reddit.com/u/sm-Fifteen
# Current author(s):        Alex Portell <github.com/portellam>
#
# Original source(s):   [1] https://raw.githubusercontent.com/PassthroughPOST/VFIO-Tools/master/libvirt_hooks/qemu
#                       [2] https://wiki.archlinux.org/index.php?title=PCI_passthrough_via_OVMF#Host_lockup_if_guest_is_left_running_during_sleep
#
#
# Copy this file to /etc/libvirt/hooks, make sure it's called "qemu".
# After this file is installed, restart libvirt.
# From now on, you can easily add per-guest qemu hooks.
# Add your hooks in /etc/libvirt/hooks/qemu.d/vm_name/hook_name/state_name.
# For a list of available hooks, please refer to https://www.libvirt.org/hooks.html
#

# parameters #
str_object="$1"
str_operation="$2"
str_subOperation="$3"
str_objectAction="$2/$3"
str_extraArg="$4"
str_baseDir="$(dirname $0)"
str_hookPath="$str_baseDir/qemu.d/$str_object/$str_operation/$str_subOperation"

set -e # If a script exits with an error, we should as well.

# [2]
# create nosleep system service instance for given guest #
case "$str_operation" in

        # allocate #
        "prepare")
                systemctl start libvirt-nosleep@"$str_object"
                ;;

        # release #
        "release")
                systemctl stop libvirt-nosleep@"$str_object"
                ;;
esac

# [1]
# check if it's a non-empty executable file #
if [ -f "$str_hookPath" ] && [ -s "$str_hookPath" ] && [ -x "$str_hookPath" ]; then
    eval \"$str_hookPath\" "$@"

elif [ -d "$str_hookPath" ]; then
    while read str_line1; do

        # check for null string
        if [ ! -z "$str_line1" ]; then
            eval \"$str_line1\" "$@"
        fi
    done <<< "$(find -L "$str_hookPath" -maxdepth 1 -type f -executable -print;)"
fi



