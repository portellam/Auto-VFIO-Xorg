#!/bin/false

#
# Filename:       src_iommu
# Description:    Logic to parse and select IOMMU groups.
# Author(s):      Alex Portell <github.com/portellam>
# Maintainer(s):  Alex Portell <github.com/portellam>
#

#
# TODO:
# - [x] migrate logic and params into separate source files.
# - [!] rename params.
# - [!] double-check external class params are named properly.
# - [x] refactor.
# - [x] add comments.
# - [!] add bools?
# - [ ] test.
#

#
# sources
#
  declare -g SRC_STR_SCRIPT_DIR="/usr/local/bin/"
  declare -g SRC_STR_SCRIPT_BIN_DIR="${SRC_STR_SCRIPT_DIR}deploy-vfio.d/"

  source "${SRC_STR_SCRIPT_BIN_DIR}src_print"
  source "${SRC_STR_SCRIPT_BIN_DIR}src_iommu_presentation"
  source "${SRC_STR_SCRIPT_BIN_DIR}src_iommu_xml"

#
# logic
#
  #
  # DESC:   Do parse the IOMMU database.
  # $1:     the array of IOMMU group IDs as a reference.
  # $2:     the array of reserved IOMMU groups for Host as a reference.
  # $3:     the array of reserved IOMMU groups with VGA for Host as a reference.
  # $4:     the array of reserved IOMMU groups for VFIO as a reference.
  # $5:     the array of reserved IOMMU groups with VGA for VFIO as a reference.
  # $6:     do parse IOMMU groups.
  # RETURN: If parse is successful or skipped, return 0.
  #         If failed, return 1.
  #
    function parse_iommu_database
    {
      log_stdout "${0}: ${FUNCNAME}"

      local -r str_arr_iommu_group_id_ref_name="${1}"
      local -r str_arr_iommu_groups_for_host_ref_name="${2}"
      local -r str_arr_iommu_groups_for_host_with_vga_ref_name="${3}"
      local -r str_arr_iommu_groups_for_vfio_ref_name="${4}"
      local -r str_arr_iommu_groups_for_vfio_with_vga_ref_name="${5}"
      local bool_do_parse_iommu_groups="${6}"

      if ! is_array "${str_arr_iommu_group_id_ref_name}"; then
        log_stderr "Missing array reference for IOMMU group IDs."
        return 1
      fi

      if ! is_array "${str_arr_iommu_groups_for_host_ref_name}"; then
        log_stderr "Missing array reference for Host machine IOMMU groups."
        return 1
      fi

      if ! is_array "${str_arr_iommu_groups_for_host_with_vga_ref_name}"; then
        log_stderr "Missing array reference for Host machine IOMMU groups "\
          "with VGA."

        return 1
      fi

      if ! is_array "${str_arr_iommu_groups_for_vfio_ref_name}"; then
        log_stderr "Missing array reference for VFIO IOMMU groups."
        return 1
      fi

      if ! is_array "${str_arr_iommu_groups_for_vfio_with_vga_ref_name}"; then
        log_stderr "Missing array reference for VFIO IOMMU groups with VGA."
        return 1
      fi

      if is_string "${bool_do_parse_iommu_groups}" \
        || ! is_bool "${bool_do_parse_iommu_groups}"; then
        return 1
      fi

      if ! "${bool_do_parse_iommu_groups}" \
        || ! parse_iommu_database_prompt; then
        print_output_to_log "Parse of IOMMU groups skipped."
        return 0
      fi

      if ! create_temp_files_for_database \
        || ! try_to_parse_iommu_database "${str_arr_iommu_group_id_ref_name}" \
          "${str_arr_iommu_groups_for_host_ref_name}" \
          "${str_arr_iommu_groups_for_host_with_vga_ref_name}" \
          "${str_arr_iommu_groups_for_vfio_ref_name}" \
          "${str_arr_iommu_groups_for_vfio_with_vga_ref_name}" \
          "${bool_do_parse_iommu_groups}"; then
        cleanup_iommu_groups_xml_file
        print_error_to_log "Parse of IOMMU groups failed."
        return 1
      fi

      cleanup_iommu_groups_xml_file
      log_stdout "Parse of IOMMU groups successful."
    }

  #
  # DESC:   Try to parse the IOMMU database.
  # $1:     the array of IOMMU group IDs as a reference.
  # $2:     the array of reserved IOMMU groups for Host as a reference.
  # $3:     the array of reserved IOMMU groups with VGA for Host as a reference.
  # $4:     the array of reserved IOMMU groups for VFIO as a reference.
  # $5:     the array of reserved IOMMU groups with VGA for VFIO as a reference.
  # $6:     do parse IOMMU groups.
  # RETURN: If parse is successful, return 0.
  #         If false, return 1.
  #
    function try_to_parse_iommu_database
    {
      log_stdout "${0}: ${FUNCNAME}"

      local -r str_arr_iommu_group_id_ref_name="${1}"
      local -r str_arr_iommu_groups_for_host_ref_name="${2}"
      local -r str_arr_iommu_groups_for_host_with_vga_ref_name="${3}"
      local -r str_arr_iommu_groups_for_vfio_ref_name="${4}"
      local -r str_arr_iommu_groups_for_vfio_with_vga_ref_name="${5}"
      local bool_do_parse_iommu_groups="${6}"

      if ! is_array "${str_arr_iommu_group_id_ref_name}"; then
        log_stderr "Missing array reference for IOMMU group IDs."
        return 1
      fi

      if ! is_array "${str_arr_iommu_groups_for_host_ref_name}"; then
        log_stderr "Missing array reference for Host machine IOMMU groups."
        return 1
      fi

      if ! is_array "${str_arr_iommu_groups_for_host_with_vga_ref_name}"; then
        log_stderr "Missing array reference for Host machine IOMMU groups "\
          "with VGA."

        return 1
      fi

      if ! is_array "${str_arr_iommu_groups_for_vfio_ref_name}"; then
        log_stderr "Missing array reference for VFIO IOMMU groups."
        return 1
      fi

      if ! is_array "${str_arr_iommu_groups_for_vfio_with_vga_ref_name}"; then
        log_stderr "Missing array reference for VFIO IOMMU groups with VGA."
        return 1
      fi

      if is_string "${bool_do_parse_iommu_groups}" \
        || ! is_bool "${bool_do_parse_iommu_groups}"; then
        return 1
      fi

      # TODO: fix below.

      if ! specify_iommu_groups_xml_file; then
        return 1
      fi

      if ! is_xml_file_valid &> /dev/null; then
        if ! does_host_not_have_existing_vfio_setup \
          || ! export_iommu_database_to_xml_file; then
          return 1
        fi

      else
        if ! does_host_not_have_existing_vfio_setup; then
          return 1
        fi

        if "${SRC_IOMMU_BOOL_DO_PARSE_DATABASE_FROM_XML}" \
          || ! import_iommu_groups_from_xml_file; then
          return 1
        fi
      fi

      # TODO: fix above.

      if ! do_select_iommu_group_collection "${str_arr_iommu_group_id_ref_name}" \
          "${str_arr_iommu_groups_for_host_ref_name}" \
          "${str_arr_iommu_groups_for_host_with_vga_ref_name}" \
          "${str_arr_iommu_groups_for_vfio_ref_name}" \
          "${str_arr_iommu_groups_for_vfio_with_vga_ref_name}"; then
        return 1
      fi

      return 0
    }

  #
  # DESC:   Prompt to parse IOMMU database.
  # RETURN: If flag is specified, skip and return 0.
  #         If prompt is answered yes, return 0.
  #         If false, return 1.
  #
    function parse_iommu_database_prompt
    {
      log_stdout "${0}: ${FUNCNAME}"

      if ! ask_yes_or_no "Parse IOMMU groups?"; then
        return 1
      fi

      return 0
    }

#
# main logic
#
  set_globals
  unset set_globals