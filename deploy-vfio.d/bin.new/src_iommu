#!/bin/false

#
# Filename:       src_iommu
# Description:    Logic to parse and select IOMMU groups.
# Author(s):      Alex Portell <github.com/portellam>
# Maintainer(s):  Alex Portell <github.com/portellam>
#

#
# TODO:
# - [ ] migrate logic and params into separate source files.
# - [ ] rename params.
# - [ ] double-check external class params are named properly.
# - [ ] refactor.
# - [ ] add comments.
# - [ ] add bools?
#

#
# sources
#
  declare -g SRC_STR_SCRIPT_DIR="/usr/local/bin/"
  declare -g SRC_STR_SCRIPT_BIN_DIR="${SRC_STR_SCRIPT_DIR}deploy-vfio.d/"

  source "${SRC_STR_SCRIPT_BIN_DIR}src_print"
  source "${SRC_STR_SCRIPT_BIN_DIR}src_iommu_presentation"
  source "${SRC_STR_SCRIPT_BIN_DIR}src_iommu_xml"

#
# setter logic
#
  #
  # DESC: globals
  #
    function set_globals
    {
      if [[ "${SRC_IOMMU_BOOL_SET_GLOBALS}" == true ]]; then
        return 0
      fi

      declare -g SRC_IOMMU_BOOL_SET_GLOBALS=true

      declare -g SRC_IOMMU_BOOL_HAS_ARG_PARSE_IOMMU=false
      declare -g SRC_IOMMU_BOOL_HAS_ARG_PARSE_IOMMU_SELECT_ALL=false
      declare -g SRC_IOMMU_BOOL_HAS_ARG_PARSE_IOMMU_SELECT_SOME=false
    }

  #
  # DESC:   Do parse the IOMMU database.
  # $1:     boolean; if true, skip parse.
  # RETURN: If parse is successful or skipped, return 0.
  #         If failed, return 1.
  #
    function parse_iommu_database
    {
      if is_bool "${1}" &> /dev/null \
        && "${1}"; then
        print_output_to_log "Skipped parse of IOMMU groups."
        return 0
      fi

      parse_iommu_database_prompt || return 0

      if ! create_temp_files_for_database \
        || ! try_to_parse_iommu_database; then
        cleanup_iommu_database
        print_error_to_log "Database parse incomplete."
        return 1
      fi

      cleanup_iommu_database
      print_pass_to_log "Database parse complete."
    }

  #
  # DESC:   Try to parse the IOMMU database.
  # RETURN: If parse is successful, return 0.
  #         If false, return 1.
  #
    function try_to_parse_iommu_database
    {
      is_unparsed_enum_valid || return 1
      parse_iommu_database_from_xml_file
      specify_xml_file || return 1
      is_xml_file_created || return 1

      if ! is_xml_file_valid &> /dev/null; then
        does_host_not_have_existing_vfio_setup || return 1
        export_iommu_database_to_xml_file || return 1
        specify_iommu_group_enum
      fi

      if ! does_host_not_have_existing_vfio_setup; then
        return 1
      fi

      if "${SRC_IOMMU_BOOL_DO_PARSE_DATABASE_FROM_XML}"; then
        import_iommu_groups_from_xml_file || return 1
      fi

      specify_iommu_group_enum
    }

  #
  # DESC:   Prompt to parse IOMMU database.
  # RETURN: If flag is specified, skip and return 0.
  #         If prompt is answered yes, return 0.
  #         If false, return 1.
  #
    function parse_iommu_database_prompt
    {
      if "${SRC_IOMMU_BOOL_DO_PARSE_DATABASE}"; then
        return 0
      fi

      if ! ask_yes_or_no "Parse database for IOMMU groups?"; then
        SRC_IOMMU_BOOL_DO_PARSE_DATABASE=false
        return 1
      fi

      SRC_IOMMU_BOOL_DO_PARSE_DATABASE=true
      return 0
    }

#
# main logic
#
  set_globals
  unset set_globals