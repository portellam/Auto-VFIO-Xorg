#!/bin/bash sh

#
# Filename:         vfiolib-calcs
# Description:      Calculate answers and values for setups and usage.
# Author(s):        Alex Portell <github.com/portellam>
# Maintainer(s):    Alex Portell <github.com/portellam>
#

# <remarks> Using </remarks>
# <code>
    source vfiolib-globals
# </code>

# <code>
    function GetFreeMemory
    {
        _AVAILABLE_MEMORY=$(( _INT_MAX_MEMORY - _MIN_MEMORY ))
        return 0
    }

    function GetMemoryAllocatedToHugepages
    {
        _HUGEPAGES_ALLOCATED_MEMORY=$(( $_HUGEPAGES_COUNT * $_HUGEPAGES_SIZE_IN_KBIT ))
        return 0
    }

    function GetHugepageByteSize
    {
        local -u _ANSWER="$1"

        case "$_ANSWER" in
            "1G" | "2M" )
                _HUGEPAGES_BYTE_SUFFIX="$_ANSWER"
                _IS_HUGEPAGES_SIZE_SET=true
                return 0 ;;

            "" )
                return 1 ;;

            * )
                echo -e "Please answer \"2M\" or \"1G\"."
                return 1 ;;
        esac
    }

    function GetHugepageCount
    {
        if ! GetHugepageMinAndMaxSizes \
            || [[ "$1" == "" ]]; then
            return 1
        fi

        if ! [[ "$1" =~ ^[0-9]+$ ]] \
            || [[ "$1" -lt "$_HUGEPAGES_MIN_SIZE" ]] \
            || [[ "$1" -gt "$_HUGEPAGES_MAX_SIZE" ]]; then
            echo -e "Please answer between \"$_HUGEPAGES_MIN_SIZE\" or \"$_HUGEPAGES_MAX_SIZE\"."
            return 1
        fi

        _IS_HUGEPAGES_COUNT_SET=true
        declare -gi _HUGEPAGES_COUNT="$1"
        return 0
    }

    function GetHugepageMinAndMaxSizes
    {
        declare -gi _HUGEPAGES_MAX_SIZE=0
        declare -gi _HUGEPAGES_MAX_SIZE_IN_KBIT=$( cat /proc/meminfo | grep MemTotal | cut -d ":" -f 2 | cut -d "k" -f 1 )
        declare -gi _HUGEPAGES_MIN_SIZE=0
        declare -gi _HUGEPAGES_MIN_SIZE_IN_KBIT=4194304
        declare -gi _HUGEPAGES_SIZE_IN_KBIT=0

        case "$_HUGEPAGES_BYTE_SUFFIX" in
            "2M" )
                _HUGEPAGES_SIZE_IN_KBIT=2048
                _HUGEPAGES_MIN_SIZE=2 ;;

            "1G" )
                _HUGEPAGES_SIZE_IN_KBIT=1048576
                _HUGEPAGES_MIN_SIZE=1 ;;

            * )
                echo -e "$_PREFIX_ERROR Failed to calculate minimum or maximum values for Hugepages."
                return 1 ;;
        esac

        _HUGEPAGES_MAX_SIZE=$(( "$_HUGEPAGES_MAX_SIZE_IN_KBIT" - "$_HUGEPAGES_MIN_SIZE_IN_KBIT" ))
        _HUGEPAGES_MAX_SIZE=$(( "$_HUGEPAGES_MAX_SIZE" / "$_HUGEPAGES_SIZE_IN_KBIT" ))
        return 0
    }

    function GetZramSwapSize
    {
        IsHostMemorySufficientForZramSwap || return 1

        case "$1" in
            *"/"* )
                local -i _NUMERATOR=$( echo $1 | cut -d '/' -f1 )
                local -i _DENOMINATOR=$( echo $1 | cut -d '/' -f2 ) ;;

            * )
                echo -e "$_PREFIX_ERROR Not a fraction."
                return 1 ;;
        esac

        if ! [[ "$_NUMERATOR" =~ ^[0-9]+$ ]] \
            || ! [ "$_DENOMINATOR" =~ ^[0-9]+$ ]; then
            echo -e "$_PREFIX_ERROR Values are not numbers."
            return 1
        fi

        if [[ "$_NUMERATOR" -lt "$_DENOMINATOR" ]] || [[ "$_DENOMINATOR" -gt 1 ]]; then
            _ZRAM_SWAP_SET_FRACTION=true
            declare -g _ZRAM_SWAP_FRACTION="$1"
            return 0

        elif [[ "$_DENOMINATOR" -eq 0 ]]; then
            return 1

        else
             echo -e "$_PREFIX_ERROR Invalid fraction."
        fi

        return 1
    }

    function IsHostMemorySufficientForHugepages
    {
        GetFreeMemory

        if [[ "$_AVAILABLE_MEMORY" -le 0 ]]; then
            echo -e "$_PREFIX_ERROR Insufficient Host memory for Hugepages."
            return 1
        fi

        return 0
    }

    function IsHostMemorySufficientForZramSwap
    {
        GetFreeMemory

        if "$_IS_HUGEPAGES_SETUP"; then
            GetMemoryAllocatedToHugepages || return 1
            _AVAILABLE_MEMORY=$(( _AVAILABLE_MEMORY - _HUGEPAGES_ALLOCATED_MEMORY ))
        fi

        if [[ "$_AVAILABLE_MEMORY" -le 0 ]]; then
            echo -e "$_PREFIX_ERROR Insufficient Host memory for zram-swap."
            return 1
        fi

        return 0

    }
# </code>

# <params>
    declare -g _IS_HUGEPAGES_COUNT_SET=false
    declare -g _IS_HUGEPAGES_SIZE_SET=false
    declare -gi _AVAILABLE_MEMORY=0
    declare -gi _MIN_MEMORY=8
# </params>