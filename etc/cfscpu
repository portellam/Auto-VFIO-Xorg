#!/usr/bin/env bash

#
# Filename:         /etc/libvirt/hooks/cfscpu
# Description:      Set the "nice level" of the Completely Fair Scheduler of vCPU threads.
# URL(s):           https://github.com/PassthroughPOST/VFIO-Tools
# Author(s):        Danny Lin <danny@kdrag0n.dev>
# Maintainer(s):    Alex Portell <github.com/portellam>
#

# <remarks>
# This hook sets the CFS "nice level" of the vCPU threads to the configured
# value. This can be useful as a replacement for using the real-time FIFO
# scheduling policy (SCHED_FIFO) through libvirt since it causes lockups on
# some systems. It can improve VM responsiveness when CPU load on the host is
# high by making the CFS scheduler prioritize runnable vCPU threads over other
# miscellaneous processes which are "nicer".
#
# Note that this is primarily intended for setups where QEMU is not running as
# its own dedicated user as otherwise it is preferred to use udev rules to
# set the user's default nice level instead. Some setups necessitate running
# QEMU as another user for PulseAudio or other reasons, which is where this
# script is useful.
# </remarks>

# <remarks> Ranges from 20 (lowest priority) to -20 (highest priority). </remarks>
_TARGET_NICE="-1"
_DOMAIN_NAME="$1"
_HOOK_NAME="cfscpu"
_PREFIX_PROMPT="libvirt-qemu $_HOOK_NAME:"

function GetVCPU_Path
{
    if ls /sys/fs/cgroup/cpu/machine.slice/machine-qemu*$_DOMAIN_NAME.scope/libvirt/vcpu* 1> /dev/null 2>&1; then
        echo "$_PREFIX_PROMPT Found vCPU paths in Libvirt subdirectory." > /dev/kmsg
        _VCPU_PATH="/sys/fs/cgroup/cpu/machine.slice/machine-qemu*$_DOMAIN_NAME.scope/libvirt/vcpu*"
    else
        echo "$_PREFIX_PROMPT Failed to find vCPU paths in Libvirt subdirectory. Found vCPU directory." > /dev/kmsg
        _VCPU_PATH="/sys/fs/cgroup/cpu/machine.slice/machine-qemu*$_DOMAIN_NAME.scope/vcpu*"
    fi

    return 0
}

function Prioritize_vCPU_ForDomain
{
    if ! SetNiceLevelForDomain; then
        echo "$_PREFIX_PROMPT Failed to prioritize vCPU threads of Libvirt domain '$_DOMAIN_NAME'" > /dev/kmsg
        return 1
    fi

    echo "$_PREFIX_PROMPT Prioritized vCPU threads of Libvirt domain '$_DOMAIN_NAME'" > /dev/kmsg
    return 0
}

function SetNiceLevelForDomain
{
    for _VCPU_GROUP in $_VCPU_PATH; do
        echo "$_PREFIX_PROMPT Setting nice level of $_TARGET_NICE to vCPU group '$( basename $_VCPU_GROUP ).'" > /dev/kmsg

        for _PID in $( cat $_VCPU_GROUP/tasks ); do
            if ! renice -n "$_TARGET_NICE" -p "$_PID" 2> /dev/null; then
                echo "$_PREFIX_PROMPT An error occured: Failed to set nice level for PID '$_PID'"
                return 1
            fi
        done
    done

    return 0
}

if [[ ! -z "$_DOMAIN" ]]; then
    GetVCPU_Path
    Prioritize_vCPU_ForDomain
fi