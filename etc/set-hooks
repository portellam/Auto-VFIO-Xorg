#!/bin/bash

#
# Filename:         /etc/libvirt/hooks/set-hooks
# Description:      Create symlinks of hooks for valid Libvirt domains.
# Author(s):        Alex Portell <github.com/portellam>
# Maintainer(s):    Alex Portell <github.com/portellam>
#

_DOMAIN_NAME="$1"
_HOOKS_BASE_DIR="/etc/libvirt/hooks"
_DOMAIN_NAME_BASE_DIR="$_HOOKS_BASE_DIR/qemu.d/$_DOMAIN_NAME"
_BEGIN_DIR="$_DOMAIN_NAME_BASE_DIR/started/begin/"
_END_DIR="$_DOMAIN_NAME_BASE_DIR/stopped/end/"

# <remarks> Add domain-specific hooks here. </remarks>
_HOOK_NAME_1="ddcutil"
_HOOK_NAME_2="cfscpu"

function GetPathsForDomain
{
    if ( [[ ! -d "$_BASE_DIR" ]] && ! mkdir -p "$_BASE_DIR" &> /dev/null ) \
        || ( [[ ! -d "$_BEGIN_DIR" ]] && ! mkdir -p "$_BEGIN_DIR" &> /dev/null ) \
        || ( [[ ! -d "$_END_DIR" ]] && ! mkdir -p "$_END_DIR" &> /dev/null ); then
        echo -e "An error occured: Failed to create directories for domain."
        return 1
    fi

    return 0
}

function GetHooks
{
    if [[ ! -e "$_HOOKS_BASE_DIR/$_HOOK_NAME_1" ]]; then
        echo -e "An error occured: Failed to find domain hook(s)."
        return 1
    fi

    return 0
}

function SetHooksForDomain
{
    if [[ -z "$1" ]]; then
        return 0
    fi

    if ! ln -s "$_BEGIN_DIR/$1" "$_HOOKS_BASE_DIR/$1" &> /dev/null \
        || ! ln -s "$_END_DIR/$1" "$_HOOKS_BASE_DIR/$1" &> /dev/null; then
        echo -e "An error occured: Failed to set symlinks for hook '$1'."
        return 1
    fi

    if ! chmod +x "$_BEGIN_DIR/$1" &> /dev/null \
        || ! chmod +x "$_END_DIR/$1" &> /dev/null; then
        echo -e "An error occured: Failed to set file permissions for hook '$1'."
        return 1
    fi

    return 0
}

if [[ ! -z "$_DOMAIN_NAME" ]] \
    && GetPathsForDomain "$_DOMAIN_NAME" \
    && GetHooks; then

    # <remarks> Call domain-specific hooks here. </remarks>
    SetHooksForDomain "$_HOOK_NAME_1"
    SetHooksForDomain "$_HOOK_NAME_2"
fi